name: Build Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

permissions:
  contents: write
  actions: read

jobs:
  build:
    name: Build Binary
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            artifact_name: backup-home_linux_amd64
          - os: darwin
            arch: arm64
            artifact_name: backup-home_darwin_arm64
          - os: windows
            arch: amd64
            artifact_name: backup-home_windows_amd64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          check-latest: true

      - name: Set Version
        run: |
          echo "VERSION=$(make version | grep Version: | cut -d' ' -f2)" >> $GITHUB_ENV
          echo "GIT_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')" >> $GITHUB_ENV

      - name: Build Binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -v -o dist/${{ matrix.artifact_name }} \
            -ldflags="-s -w -X main.version=${VERSION} -X main.gitCommit=${GIT_COMMIT} -X main.buildTime=${BUILD_TIME}" \
            ./cmd/backup-home

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}
          retention-days: 5

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: write
      actions: read

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for artifact in dist/*; do
            gh release upload ${{ github.event.release.tag_name }} "$artifact"/* --clobber
          done 
